<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shch.demo.license.mapper.LicenseMapper">

	<select id="getGridLicenseList" parameterType="HashMap" resultType="HashMap">
		select z.licserver
		      ,b.licnm
		      ,b.topmodulenm
		      ,z.maxcredit
		      ,b.sort
		from (      
				select  a.licserver 
				      , max(a.maxcredit) as maxcredit
				from tb_lic_cae_korea_total_amt_v2 a
				<where>
					  <if test='licnm != null and licnm != ""'>
					  and b.licnm like '%'+ #{licnm} +'%'
					  </if>
					  <if test='modulenm != null and modulenm != ""'>
					  and a.modulenm like '%'+ #{modulenm} +'%'
					  </if>
					  <if test='stDateTime != null and stDateTime != ""'>
					  and convert(datetime, substring(a.logedtime,1,8)) >= convert(datetime,#{stDateTime})
					  </if>
					  <if test='etDateTime != null and etDateTime != ""'>
					  and convert(datetime, substring(a.logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})
					  </if>				
					  <if test="daytyp != true">
					  and substring(a.logedtime,9,2) > 7
					  and substring(a.logedtime,9,2) <![CDATA[<]]> 19				  
					  </if>		
				</where>  									
				group by a.licserver 
		) z, tb_lic_server_info b	
		where z.licserver = b.licserver
		  and b.useflag = 'Y'
	    order by b.sort asc
	</select>

	<select id="getGridModuleList" parameterType="HashMap" resultType="HashMap">
		select z.licserver
		      ,b.licnm
		      ,z.modulenm
		      ,z.usage
		      ,z.maxcredit
		from (
				select a.licserver
				     , a.modulenm
				     , max(convert(integer,a.usage)) as usage
				     , avg(convert(bigint,a.maxcredit)) as maxcredit
				from tb_lic_cae_korea_total_amt_v2 a
				where a.licserver = #{licserver}		  
				<if test='modulenm != null and modulenm != ""'>
				and a.modulenm like '%'+ #{modulenm} +'%'
				</if>
				<if test='stDateTime != null and stDateTime != ""'>
				and convert(datetime, substring(a.logedtime,1,8)) >= convert(datetime,#{stDateTime})
				</if>
				<if test='etDateTime != null and etDateTime != ""'>
				and convert(datetime, substring(a.logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})
				</if>	
				<if test="daytyp != true">
			    and substring(a.logedtime,9,2) > 7
			    and substring(a.logedtimE,9,2) <![CDATA[<]]> 19	
			    </if>			
				group by a.licserver, a.modulenm
		) z, tb_lic_server_info b	
		where z.licserver = b.licserver
		  and b.useflag = 'Y'	
		order by z.modulenm asc
	</select>
	
	<select id="getGridLicUserList" parameterType="hashmap" resultType="hashmap">
		select a.licserver
		     , a.modulenm as modulenm
		     , a.id as id
		     , b.user_nm AS name
		     , b.dept_nm as deptnm
		     , count(*) AS cnt
		     , convert(varchar,count(*))+' / '+ 
		       convert(varchar,(select count(*)
								from tb_lic_cae_korea_total_amt_v2
								where licserver = #{licserver}
								  and modulenm = #{modulenm}
								  and convert(datetime, substring(logedtime,1,8)) >= convert(datetime,#{stDateTime}) 	 
								  and convert(datetime, substring(logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})
									<if test='daytyp != "A"'>
									and substring(logedtime,9,2) > 7
					    			and substring(logedtimE,9,2) <![CDATA[<]]> 19	
									</if>  )) AS usecount
		from tb_lic_cae_user_log_v2 a left outer join tb_lic_ext_usertable b on a.id =b.user_id
		where a.licserver = #{licserver}
		and   a.modulenm = #{modulenm}
		<if test='id != null and id != ""'>
		AND a.id like '%'+ #{id} +'%'
		</if>
		<if test='stDateTime != null and stDateTime != ""'>
		and convert(datetime, substring(a.logedtime,1,8)) >= convert(datetime,#{stDateTime}) 	
		</if>
		<if test='etDateTime != null and etDateTime != ""'>
		and convert(datetime, substring(a.logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})
		</if>
		<if test="daytyp != true">
	    and substring(a.logedtime,9,2) > 7
	    and substring(a.logedtimE,9,2) <![CDATA[<]]> 19			  
		</if>	
		group by a.licserver, a.modulenm, a.id, b.user_nm,b.dept_nm	
		order by cnt desc

	</select>	

	<select id="getlicchartList" parameterType="hashmap" resultType="hashmap">
		<choose>
			<when test='datetype == "day"'>
			WITH DateRange(Dates, DateWD) AS (
				SELECT convert(datetime,convert(datetime,#{stDateTime})) as Date, DATEPART(WEEKDAY, convert(datetime,convert(datetime,#{stDateTime})))
				UNION ALL
				SELECT DATEADD(d,1,Dates), DATEPART(HOUR, DATEADD(WEEKDAY,1,Dates))
				FROM DateRange
				WHERE Dates <![CDATA[<]]> convert(datetime,convert(datetime,#{etDateTime}))			
			)			
			select row_number() over (order by z.regdate) as rnum
				 , isnull(z.usage,'0') as usage
				 , isnull(z.maxlic,'0') as maxlic
				 , isnull(z.usercnt,'0') as usercnt
				 , isnull(z.per,'0') as per
				 , b.defaultdate as regdate
			from (
				    select substring(a.logedtime,1,8) as regdate
						 , avg(convert(float, convert(float,replace(a.usage,'','0')))) as usage
						 , avg(convert(float, convert(float,replace(a.maxcredit,'','0')))) as maxlic	
						 , max(convert(integer,a.usage)) as usercnt				
						 , case when avg(convert(float, convert(float,replace(a.usage,'','0')))) = 0 then 0
						   else round(avg(convert(float, convert(float,replace(a.usage,'','0'))))/avg(convert(float, convert(float,replace(a.maxcredit,'','0'))))*100,1)
						   end as per
					from tb_lic_cae_korea_total_amt_v2 a 
					where a.licserver = #{licserver} 
					  and a.modulenm = #{modulenm}
					  <if test='stDateTime != null and stDateTime != ""'>
					  and convert(datetime, substring(a.logedtime,1,8)) >= convert(datetime,#{stDateTime}) 	
					  </if>
					  <if test='etDateTime != null and etDateTime != ""'>
					  and convert(datetime, substring(a.logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})
					  </if>
					  <if test="daytyp != true">
				      and substring(a.logedtime,9,2) > 7
				      and substring(a.logedtimE,9,2) <![CDATA[<]]> 19			  
					  </if>	
					group by a.licserver, a.modulenm, substring(a.logedtime,1,8)
			) z	right outer join (SELECT substring(replace(convert(varchar(8), Dates, 112)+convert(varchar(8), Dates, 114), ':',''),1,8) as defaultdate
							      FROM DateRange) b on z.regdate = b.defaultdate		
			order by b.defaultdate
			OPTION (MAXRECURSION 0)	
			</when>				
			<otherwise>
			WITH DateRange(Dates, DateWD) AS (
				SELECT convert(datetime,convert(datetime,#{stDateTime}+' 01:00:00.000')) as Date, DATEPART(HOUR, convert(datetime,convert(datetime,#{stDateTime}+' 01:00:00.000')))
				UNION ALL
				SELECT DATEADD(HH,1,Dates), DATEPART(HOUR, DATEADD(HH,1,Dates))
				FROM DateRange
				WHERE Dates <![CDATA[<]]> convert(datetime,convert(datetime,#{etDateTime}+' 23:00:00.000'))			
			)			
			select row_number() over (order by z.regdate) as rnum
				 , isnull(z.usage,'0') as usage
				 , isnull(z.maxlic,'0') as maxlic
				 , isnull(z.usercnt,'0') as usercnt
				 , isnull(z.per,'0') as per
				 , b.defaultdate as regdate
			from (
				    select substring(a.logedtime,1,10) as regdate
						 , avg(convert(float, convert(float,replace(a.usage,'','0')))) as usage
						 , avg(convert(float, convert(float,replace(a.maxcredit,'','0')))) as maxlic	
						 , max(convert(integer,a.usage)) as usercnt				
						 , case when avg(convert(float, convert(float,replace(a.usage,'','0')))) = 0 then 0
								else round(avg(convert(float, convert(float,replace(a.usage,'','0'))))/avg(convert(float, convert(float,replace(a.maxcredit,'','0'))))*100,1)
						   end as per
					from tb_lic_cae_korea_total_amt_v2 a 
					where a.licserver = #{licserver} 
					  and a.modulenm = #{modulenm}
					  <if test='stDateTime != null and stDateTime != ""'>
					  and convert(datetime, substring(a.logedtime,1,8)) >= convert(datetime,#{stDateTime}) 	
					  </if>
					  <if test='etDateTime != null and etDateTime != ""'>
					  and convert(datetime, substring(a.logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})
					  </if>
					  <if test="daytyp != true">
				      and substring(a.logedtime,9,2) > 7
				      and substring(a.logedtimE,9,2) <![CDATA[<]]> 19			  
					  </if>	
					group by a.licserver, a.modulenm, substring(a.logedtime,1,10)
			) z	right outer join (SELECT substring(replace(convert(varchar(8), Dates, 112)+convert(varchar(8), Dates, 114), ':',''),1,10) as defaultdate
							      FROM DateRange) b on z.regdate = b.defaultdate		
			order by b.defaultdate
			OPTION (MAXRECURSION 0)							      
			</otherwise>
		</choose>
	</select>
	
	<select id="getGridLicServerList" parameterType="hashmap" resultType="hashmap">
		select *
		from tb_lic_server_info
		order by sort
	</select>

	<select id="getLogFileNameUrlList" resultType="hashmap">
		select z.fileurl
		      ,z.filenmtype
		      ,z.timename
		      ,z.fileurl + z.filenmtype as filename
		      ,substring(z.urltype,1,charindex('/',z.urltype)-1) as functionurl
		from (      
			select fileurl
			     , REPLACE(REPLACE(REPLACE(REPLACE(filenmtype, 
			       'yyyy', DATEPART(YEAR, GETDATE())), 
			       'MM', REPLICATE('0', 2 -LEN(DATEPART(MONTH, GETDATE()))) + cast(DATEPART(MONTH, GETDATE()) as varchar)),
			       'dd', REPLICATE('0', 2 -LEN(DATEPART(DAY, GETDATE()))) + cast(DATEPART(DAY, GETDATE()) as varchar)), 
			       'HH', REPLICATE('0', 2 -LEN(DATEPART(HOUR, GETDATE()))) + cast(DATEPART(HOUR, GETDATE()) as varchar)) as filenmtype
			     , cast(DATEPART(YEAR, GETDATE()) as varchar) + 
			       REPLICATE('0', 2 -LEN(DATEPART(MONTH, GETDATE()))) + cast(DATEPART(MONTH, GETDATE()) as varchar) +
			       REPLICATE('0', 2 -LEN(DATEPART(DAY, GETDATE()))) + cast(DATEPART(DAY, GETDATE()) as varchar) +
			       REPLICATE('0', 2 -LEN(DATEPART(HOUR, GETDATE()))) + cast(DATEPART(HOUR, GETDATE()) as varchar) +
			       '0000' as timename
			     , replace(fileurl,'C:/PLM_LM/','') as urltype   
			from tb_lic_server_info
			group by fileurl, filenmtype
		) z
	</select>
	
	<insert id="saveLic">	
		merge tb_lic_server_info as t
		using (select #{oid}        as oid
				 	 ,#{licserver}  as licserver
					 ,#{licnm}      as licnm
					 ,#{fileurl}    as fileurl
					 ,#{filenmtype} as filenmtype
					 ,#{topmodulenm} as topmodulenm
					 ,#{useflag}    as useflag
					 ,#{sort}       as sort
					 ,#{sid}	    as regcd
					 ,getdate()     as regdt
					 ,#{sid}        as modcd
					 ,getdate()	    as moddt
		) s on t.oid = s.oid
		when matched then
			update set
				 licserver   = s.licserver
				,licnm       = s.licnm
				,fileurl     = s.fileurl
				,filenmtype  = s.filenmtype
				,topmodulenm = s.topmodulenm
				,useflag     = s.useflag
				,sort        = s.sort
				,modcd       = s.modcd
				,moddt	   = s.moddt
		when not matched then
			insert (
					 oid       
					,licserver 
					,licnm     
					,fileurl   
					,filenmtype
					,useflag   
					,topmodulenm
					,sort      
					,regcd     
					,regdt     
					,modcd     
					,moddt     			
			)values(
					 s.oid       
					,s.licserver 
					,s.licnm     
					,s.fileurl   
					,s.filenmtype
					,s.useflag  
					,s.topmodulenm 
					,s.sort      
					,s.regcd     
					,s.regdt     
					,s.modcd     
					,s.moddt     						
			);
	</insert>
	
	<insert id="insertLicUserLog">
		merge tb_lic_cae_user_log_v2 as t
		using (select #{id}        as id
				 	 ,#{licserver} as licserver
					 ,#{modulenm}  as modulenm
					 ,#{logintime} as logintime
					 ,#{logedtime} as logedtime					 
		) s on t.id = s.id 
		   and t.licserver = s.licserver
		   and t.modulenm = s.modulenm
		   and t.logintime = s.logintime 
		   and t.logedtime = s.logedtime
		when not matched then	   
			INSERT (
				 id
				,licserver
				,modulenm
				,logintime
				,logedtime
			)VALUES(
				 s.id
				,s.licserver
				,s.modulenm
				,s.logintime
				,s.logedtime
			);	
	</insert>

	<insert id="insertLicTotalAmtLog">   	
		merge tb_lic_cae_korea_total_amt_v2 as t
		using (select #{licserver}        as licserver
				 	 ,#{modulenm} as modulenm
					 ,#{maxcredit}  as maxcredit
					 ,#{usage} as usage
					 ,cast(#{usage} as int)/cast(#{maxcredit} as int)*100 as percentage
					 ,#{logedtime} as logedtime				 
		) s on t.licserver = s.licserver
		   and t.modulenm = s.modulenm
		   and t.maxcredit = s.maxcredit
		   and t.usage = s.usage
		   and t.percentage = s.percentage
		   and t.logedtime = s.logedtime
		when not matched then	   
			INSERT (
				 licserver
				,modulenm
				,maxcredit
				,usage
				,percentage
				,logedtime
			)VALUES(
				 s.licserver
				,s.modulenm
				,s.maxcredit
				,s.usage
				,s.percentage
				,s.logedtime
			);					
	</insert>	

	<select id="rawDataDownList" resultType="Map">
		select b.licnm
		     , a.modulenm
		     , a.logedtime
		     , a.maxcredit
		     , a.usage
		     , a.percentage
		from tb_lic_cae_korea_total_amt_v2 a, tb_lic_server_info b
		where a.licserver = #{licserver}
		  and a.modulenm = #{modulenm}
		  and a.licserver = b.licserver
		  and convert(datetime, substring(a.logedtime,1,8)) >= convert(datetime,#{stDateTime}) 	
		  and convert(datetime, substring(a.logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})		  	 
		order by a.logedtime
	</select>	
	
	<select id="sheetCheckDateList"  resultType="Map">
		select substring(logedtime,1,8) as checkdt
		from tb_lic_cae_korea_total_amt_v2
		where licserver = #{licserver}
		  and modulenm = #{modulenm}
		  and convert(datetime, substring(logedtime,1,8)) >= convert(datetime,#{stDateTime}) 	
		  and convert(datetime, substring(logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})	 
		group by substring(logedtime,1,8)	
		order by substring(logedtime,1,8)
	</select>	

	<select id="excelDownUserList" resultType="Map">
		select a.id
		      ,b.user_nm as name
		      ,b.dept_nm as deptnm
		      ,a.logintime
		      ,a.logedtime
		from tb_lic_cae_user_log_v2 a left outer join tb_lic_ext_usertable b on a.id =b.user_id
		where a.licserver = #{licserver}
		  and a.modulenm = #{modulenm}
		  and convert(datetime, substring(a.logedtime,1,8)) >= convert(datetime,#{stDateTime}) 	
		  and convert(datetime, substring(a.logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})
		  and substring(a.logedtime,1,8) = #{checkdt}	
		order by a.logedtime 
	</select>	
	
	<select id="reportDownMap" resultType="Map">
		select b.licnm as lic
		     , a.modulenm as mod
		     , max(convert(integer,usage)) as pc
		     , avg(convert(integer,usage)) as ac
		     , max(convert(integer,maxcredit)) as mc
		     , round((avg(convert(float,usage)))/avg(convert(float,maxcredit)) *100, 1) as per
		     , convert(datetime,#{stDateTime}) as stdate 
		     , convert(datetime,#{etDateTime}) as etdate
		from tb_lic_cae_korea_total_amt_v2 a, tb_lic_server_info b
		where a.licserver = #{licserver}
		  and a.modulenm = #{modulenm}
		  and a.licserver = b.licserver
		  and convert(datetime, substring(a.logedtime,1,8)) >= convert(datetime,#{stDateTime}) 	
		  and convert(datetime, substring(a.logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})	
		  and substring(a.logedtime,9,2) > 7
   		  and substring(a.logedtime,9,2) <![CDATA[<]]> 19		
		group by a.licserver, b.licnm, a.modulenm		
	</select>	
	
	<select id="reportDownUserList" resultType="Map">
		select a.id
		      ,b.user_nm as name
		      ,b.dept_nm as deptnm
		      ,'' as companynm
		from tb_lic_cae_user_log_v2 a left outer join tb_lic_ext_usertable b on a.id = b.user_id
		where a.licserver = #{licserver}
		  and a.modulenm = #{modulenm}
		  and convert(datetime, substring(a.logedtime,1,8)) >= convert(datetime,#{stDateTime}) 	
		  and convert(datetime, substring(a.logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})
		  and substring(a.logedtime,1,8) = #{checkdt}	
		  and substring(a.logedtime,9,2) > 7
   		  and substring(a.logedtime,9,2) <![CDATA[<]]> 19		  
		group by a.id, b.user_nm, b.dept_nm 	 
		
	</select>	
	
	<select id="selectDetail" resultType="Map">
		select b.licnm
		     , a.modulenm
		     , max(convert(integer,usage)) as peakcnt
		     , avg(convert(integer,usage)) as avgcnt
		     , max(convert(integer,maxcredit)) as maxcnt		     
		     , round((avg(convert(float,usage)))/avg(convert(float,maxcredit)) *100, 1) as avgper
		     , '08:00 ~ 18:00' as timelog
		     , #{stDateTime} + ' ~ ' + #{etDateTime} as datelog
		from tb_lic_cae_korea_total_amt_v2 a, tb_lic_server_info b
		where a.licserver = #{licserver}
		  and a.modulenm = #{modulenm}
		  and a.licserver = b.licserver
		  and convert(datetime, substring(a.logedtime,1,8)) >= convert(datetime,#{stDateTime}) 	
		  and convert(datetime, substring(a.logedtime,1,8)) <![CDATA[<=]]> convert(datetime,#{etDateTime})			  
		  and substring(a.logedtime,9,2) > 7
   		  and substring(a.logedtime,9,2) <![CDATA[<]]> 19
		group by a.licserver, b.licnm, a.modulenm	
	</select>		
</mapper>