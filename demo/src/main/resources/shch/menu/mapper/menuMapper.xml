<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shch.demo.menu.mapper.MenuMapper">
    
    <select id="getMenuList" resultType="com.shch.demo.menu.dto.Menu">
		select z.menucd
		      ,z.menunm
		      ,z.urlpath
		      ,z.sortseq
		      , case when count(z.submenucd) <![CDATA[ > ]]> 0 then 'Y' else 'N' end as submenuChk 
		from (
				select b.menucd as submenucd
				      ,a.*
				from menu a left OUTER join menu b on  a.MENUCD = b.PMENUCD
				where a.menucd in (select a.menucd
								   from role_menu a, user_auth b
								   where a.rolecd = b.rolecd
									 and b.roleuser = #{sid}
								   group by a.menucd)
		          and a.useflag = 'Y'						    
		) z
		where z.depth = '1'
		group by z.menucd,z.menunm,z.urlpath,z.sortseq
		order by z.sortseq asc
    </select>

	<select id="getSubMenuList" resultType="com.shch.demo.menu.dto.Menu">
        select * 
        from menu 
        where depth = '2' 
		and menucd in (select a.menucd
					   from role_menu a, user_auth b
					   where a.rolecd = b.rolecd
						 and b.roleuser = #{sid}
					   group by a.menucd) 
		and useflag = 'Y'			          
        order by sortseq
    </select>
    
    <select id="getGridMenuList" resultType="com.shch.demo.menu.dto.Menu">
		select a.*
		FROM MENU a
		order by a.sortseq, a.menucd
    </select>
    
    <delete id="deleteMenu" parameterType="com.shch.demo.menu.dto.Menu">
    	delete from menu where menucd = #{menucd}
    </delete>
    
    <update id="saveMenu" parameterType="com.shch.demo.menu.dto.Menu">
		MERGE menu AS m
		USING (select #{menucd} as menucd
				  	 ,#{pmenucd} as pmenucd
					 ,#{menunm} as menunm
					 ,#{depth} as depth
					 ,#{urlpath} as urlpath
				 	 ,#{param} as param
					 ,#{usrtype} as usrtype
					 ,#{sortseq} as sortseq
					 ,#{useflag} as useflag
					 ,'C' as sts
					 ,#{sid} as regcd
					 ,getdate() as regdt
					 ,#{sid} modcd
					 ,getdate() as moddt
		) as s
		ON m.menucd = s.menucd
		WHEN MATCHED THEN
			UPDATE SET
				 pmenucd = s.pmenucd
				,menunm  = s.menunm
				,depth   = s.depth
				,urlpath = s.urlpath
				,param   = s.param
				,usrtype = s.usrtype
				,sortseq = s.sortseq
				,useflag = s.useflag
				,modcd   = s.modcd
				,moddt   = getdate()
		WHEN NOT MATCHED THEN
			INSERT (
		    	 menucd
		    	,pmenucd
		    	,depth
		    	,menunm		    	
		    	,urlpath
		    	,param
		    	,usrtype
		    	,sortseq
		    	,useflag
		    	,sts
		    	,regcd
		    	,regdt
		    	,modcd
		    	,moddt			
			)VALUES(
		    	 s.menucd
		    	,s.pmenucd
		    	,s.depth
		    	,s.menunm		    	
		    	,s.urlpath
		    	,s.param
		    	,s.usrtype
		    	,s.sortseq
		    	,s.useflag
		    	,s.sts
		    	,s.regcd
		    	,s.regdt
		    	,s.modcd
		    	,s.moddt	
			);
    	   
    </update>
    
</mapper>